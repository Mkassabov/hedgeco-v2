/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as AdminLogoutImport } from './routes/admin-logout'
import { Route as PublicImport } from './routes/_public'
import { Route as AuthedAdminImport } from './routes/_authed-admin'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as PublicContactUsImport } from './routes/_public/contact-us'
import { Route as PublicAboutUsImport } from './routes/_public/about-us'
import { Route as PublicNewsRouteImport } from './routes/_public/news/route'
import { Route as PublicNewsIndexImport } from './routes/_public/news/index'
import { Route as AuthedAdminAdminIndexImport } from './routes/_authed-admin/admin/index'
import { Route as PublicRegisterServiceProviderImport } from './routes/_public/register/service-provider'
import { Route as PublicRegisterNewsMemberImport } from './routes/_public/register/news-member'
import { Route as PublicRegisterInvestorImport } from './routes/_public/register/investor'
import { Route as PublicRegisterHedgeFundImport } from './routes/_public/register/hedge-fund'
import { Route as PublicNewsArticleIdImport } from './routes/_public/news/$articleId'
import { Route as AuthedAdminAdminUsersRouteImport } from './routes/_authed-admin/admin/users/route'
import { Route as AuthedAdminAdminRegistrationRequestsRouteImport } from './routes/_authed-admin/admin/registration-requests/route'
import { Route as AuthedAdminAdminNewslettersRouteImport } from './routes/_authed-admin/admin/newsletters/route'
import { Route as AuthedAdminAdminArticlesRouteImport } from './routes/_authed-admin/admin/articles/route'
import { Route as AuthedAdminAdminAdminsRouteImport } from './routes/_authed-admin/admin/admins/route'
import { Route as AuthedAdminAdminUsersIndexImport } from './routes/_authed-admin/admin/users/index'
import { Route as AuthedAdminAdminRegistrationRequestsIndexImport } from './routes/_authed-admin/admin/registration-requests/index'
import { Route as AuthedAdminAdminNewslettersIndexImport } from './routes/_authed-admin/admin/newsletters/index'
import { Route as AuthedAdminAdminArticlesIndexImport } from './routes/_authed-admin/admin/articles/index'
import { Route as AuthedAdminAdminAdminsIndexImport } from './routes/_authed-admin/admin/admins/index'
import { Route as PublicLegalDocLegalDocumentNameImport } from './routes/_public/legal/doc.$legalDocumentName'
import { Route as AuthedAdminAdminUsersUserIdImport } from './routes/_authed-admin/admin/users/$userId'
import { Route as AuthedAdminAdminRegistrationRequestsRegistrationRequestIdImport } from './routes/_authed-admin/admin/registration-requests/$registrationRequestId'
import { Route as AuthedAdminAdminNewslettersNewImport } from './routes/_authed-admin/admin/newsletters/new'
import { Route as AuthedAdminAdminNewslettersNewsletterIdImport } from './routes/_authed-admin/admin/newsletters/$newsletterId'
import { Route as AuthedAdminAdminArticlesNewImport } from './routes/_authed-admin/admin/articles/new'
import { Route as AuthedAdminAdminArticlesArticleIdImport } from './routes/_authed-admin/admin/articles/$articleId'
import { Route as AuthedAdminAdminAdminsNewImport } from './routes/_authed-admin/admin/admins/new'
import { Route as AuthedAdminAdminAdminsAdminIdImport } from './routes/_authed-admin/admin/admins/$adminId'

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const AdminLogoutRoute = AdminLogoutImport.update({
  id: '/admin-logout',
  path: '/admin-logout',
  getParentRoute: () => rootRoute,
} as any)

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthedAdminRoute = AuthedAdminImport.update({
  id: '/_authed-admin',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)

const PublicContactUsRoute = PublicContactUsImport.update({
  id: '/contact-us',
  path: '/contact-us',
  getParentRoute: () => PublicRoute,
} as any)

const PublicAboutUsRoute = PublicAboutUsImport.update({
  id: '/about-us',
  path: '/about-us',
  getParentRoute: () => PublicRoute,
} as any)

const PublicNewsRouteRoute = PublicNewsRouteImport.update({
  id: '/news',
  path: '/news',
  getParentRoute: () => PublicRoute,
} as any)

const PublicNewsIndexRoute = PublicNewsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicNewsRouteRoute,
} as any)

const AuthedAdminAdminIndexRoute = AuthedAdminAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AuthedAdminRoute,
} as any)

const PublicRegisterServiceProviderRoute =
  PublicRegisterServiceProviderImport.update({
    id: '/register/service-provider',
    path: '/register/service-provider',
    getParentRoute: () => PublicRoute,
  } as any)

const PublicRegisterNewsMemberRoute = PublicRegisterNewsMemberImport.update({
  id: '/register/news-member',
  path: '/register/news-member',
  getParentRoute: () => PublicRoute,
} as any)

const PublicRegisterInvestorRoute = PublicRegisterInvestorImport.update({
  id: '/register/investor',
  path: '/register/investor',
  getParentRoute: () => PublicRoute,
} as any)

const PublicRegisterHedgeFundRoute = PublicRegisterHedgeFundImport.update({
  id: '/register/hedge-fund',
  path: '/register/hedge-fund',
  getParentRoute: () => PublicRoute,
} as any)

const PublicNewsArticleIdRoute = PublicNewsArticleIdImport.update({
  id: '/$articleId',
  path: '/$articleId',
  getParentRoute: () => PublicNewsRouteRoute,
} as any)

const AuthedAdminAdminUsersRouteRoute = AuthedAdminAdminUsersRouteImport.update(
  {
    id: '/admin/users',
    path: '/admin/users',
    getParentRoute: () => AuthedAdminRoute,
  } as any,
)

const AuthedAdminAdminRegistrationRequestsRouteRoute =
  AuthedAdminAdminRegistrationRequestsRouteImport.update({
    id: '/admin/registration-requests',
    path: '/admin/registration-requests',
    getParentRoute: () => AuthedAdminRoute,
  } as any)

const AuthedAdminAdminNewslettersRouteRoute =
  AuthedAdminAdminNewslettersRouteImport.update({
    id: '/admin/newsletters',
    path: '/admin/newsletters',
    getParentRoute: () => AuthedAdminRoute,
  } as any)

const AuthedAdminAdminArticlesRouteRoute =
  AuthedAdminAdminArticlesRouteImport.update({
    id: '/admin/articles',
    path: '/admin/articles',
    getParentRoute: () => AuthedAdminRoute,
  } as any)

const AuthedAdminAdminAdminsRouteRoute =
  AuthedAdminAdminAdminsRouteImport.update({
    id: '/admin/admins',
    path: '/admin/admins',
    getParentRoute: () => AuthedAdminRoute,
  } as any)

const AuthedAdminAdminUsersIndexRoute = AuthedAdminAdminUsersIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AuthedAdminAdminUsersRouteRoute,
  } as any,
)

const AuthedAdminAdminRegistrationRequestsIndexRoute =
  AuthedAdminAdminRegistrationRequestsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthedAdminAdminRegistrationRequestsRouteRoute,
  } as any)

const AuthedAdminAdminNewslettersIndexRoute =
  AuthedAdminAdminNewslettersIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthedAdminAdminNewslettersRouteRoute,
  } as any)

const AuthedAdminAdminArticlesIndexRoute =
  AuthedAdminAdminArticlesIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthedAdminAdminArticlesRouteRoute,
  } as any)

const AuthedAdminAdminAdminsIndexRoute =
  AuthedAdminAdminAdminsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthedAdminAdminAdminsRouteRoute,
  } as any)

const PublicLegalDocLegalDocumentNameRoute =
  PublicLegalDocLegalDocumentNameImport.update({
    id: '/legal/doc/$legalDocumentName',
    path: '/legal/doc/$legalDocumentName',
    getParentRoute: () => PublicRoute,
  } as any)

const AuthedAdminAdminUsersUserIdRoute =
  AuthedAdminAdminUsersUserIdImport.update({
    id: '/$userId',
    path: '/$userId',
    getParentRoute: () => AuthedAdminAdminUsersRouteRoute,
  } as any)

const AuthedAdminAdminRegistrationRequestsRegistrationRequestIdRoute =
  AuthedAdminAdminRegistrationRequestsRegistrationRequestIdImport.update({
    id: '/$registrationRequestId',
    path: '/$registrationRequestId',
    getParentRoute: () => AuthedAdminAdminRegistrationRequestsRouteRoute,
  } as any)

const AuthedAdminAdminNewslettersNewRoute =
  AuthedAdminAdminNewslettersNewImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => AuthedAdminAdminNewslettersRouteRoute,
  } as any)

const AuthedAdminAdminNewslettersNewsletterIdRoute =
  AuthedAdminAdminNewslettersNewsletterIdImport.update({
    id: '/$newsletterId',
    path: '/$newsletterId',
    getParentRoute: () => AuthedAdminAdminNewslettersRouteRoute,
  } as any)

const AuthedAdminAdminArticlesNewRoute =
  AuthedAdminAdminArticlesNewImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => AuthedAdminAdminArticlesRouteRoute,
  } as any)

const AuthedAdminAdminArticlesArticleIdRoute =
  AuthedAdminAdminArticlesArticleIdImport.update({
    id: '/$articleId',
    path: '/$articleId',
    getParentRoute: () => AuthedAdminAdminArticlesRouteRoute,
  } as any)

const AuthedAdminAdminAdminsNewRoute = AuthedAdminAdminAdminsNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => AuthedAdminAdminAdminsRouteRoute,
} as any)

const AuthedAdminAdminAdminsAdminIdRoute =
  AuthedAdminAdminAdminsAdminIdImport.update({
    id: '/$adminId',
    path: '/$adminId',
    getParentRoute: () => AuthedAdminAdminAdminsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed-admin': {
      id: '/_authed-admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedAdminImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/admin-logout': {
      id: '/admin-logout'
      path: '/admin-logout'
      fullPath: '/admin-logout'
      preLoaderRoute: typeof AdminLogoutImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/_public/news': {
      id: '/_public/news'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof PublicNewsRouteImport
      parentRoute: typeof PublicImport
    }
    '/_public/about-us': {
      id: '/_public/about-us'
      path: '/about-us'
      fullPath: '/about-us'
      preLoaderRoute: typeof PublicAboutUsImport
      parentRoute: typeof PublicImport
    }
    '/_public/contact-us': {
      id: '/_public/contact-us'
      path: '/contact-us'
      fullPath: '/contact-us'
      preLoaderRoute: typeof PublicContactUsImport
      parentRoute: typeof PublicImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicImport
    }
    '/_authed-admin/admin/admins': {
      id: '/_authed-admin/admin/admins'
      path: '/admin/admins'
      fullPath: '/admin/admins'
      preLoaderRoute: typeof AuthedAdminAdminAdminsRouteImport
      parentRoute: typeof AuthedAdminImport
    }
    '/_authed-admin/admin/articles': {
      id: '/_authed-admin/admin/articles'
      path: '/admin/articles'
      fullPath: '/admin/articles'
      preLoaderRoute: typeof AuthedAdminAdminArticlesRouteImport
      parentRoute: typeof AuthedAdminImport
    }
    '/_authed-admin/admin/newsletters': {
      id: '/_authed-admin/admin/newsletters'
      path: '/admin/newsletters'
      fullPath: '/admin/newsletters'
      preLoaderRoute: typeof AuthedAdminAdminNewslettersRouteImport
      parentRoute: typeof AuthedAdminImport
    }
    '/_authed-admin/admin/registration-requests': {
      id: '/_authed-admin/admin/registration-requests'
      path: '/admin/registration-requests'
      fullPath: '/admin/registration-requests'
      preLoaderRoute: typeof AuthedAdminAdminRegistrationRequestsRouteImport
      parentRoute: typeof AuthedAdminImport
    }
    '/_authed-admin/admin/users': {
      id: '/_authed-admin/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthedAdminAdminUsersRouteImport
      parentRoute: typeof AuthedAdminImport
    }
    '/_public/news/$articleId': {
      id: '/_public/news/$articleId'
      path: '/$articleId'
      fullPath: '/news/$articleId'
      preLoaderRoute: typeof PublicNewsArticleIdImport
      parentRoute: typeof PublicNewsRouteImport
    }
    '/_public/register/hedge-fund': {
      id: '/_public/register/hedge-fund'
      path: '/register/hedge-fund'
      fullPath: '/register/hedge-fund'
      preLoaderRoute: typeof PublicRegisterHedgeFundImport
      parentRoute: typeof PublicImport
    }
    '/_public/register/investor': {
      id: '/_public/register/investor'
      path: '/register/investor'
      fullPath: '/register/investor'
      preLoaderRoute: typeof PublicRegisterInvestorImport
      parentRoute: typeof PublicImport
    }
    '/_public/register/news-member': {
      id: '/_public/register/news-member'
      path: '/register/news-member'
      fullPath: '/register/news-member'
      preLoaderRoute: typeof PublicRegisterNewsMemberImport
      parentRoute: typeof PublicImport
    }
    '/_public/register/service-provider': {
      id: '/_public/register/service-provider'
      path: '/register/service-provider'
      fullPath: '/register/service-provider'
      preLoaderRoute: typeof PublicRegisterServiceProviderImport
      parentRoute: typeof PublicImport
    }
    '/_authed-admin/admin/': {
      id: '/_authed-admin/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthedAdminAdminIndexImport
      parentRoute: typeof AuthedAdminImport
    }
    '/_public/news/': {
      id: '/_public/news/'
      path: '/'
      fullPath: '/news/'
      preLoaderRoute: typeof PublicNewsIndexImport
      parentRoute: typeof PublicNewsRouteImport
    }
    '/_authed-admin/admin/admins/$adminId': {
      id: '/_authed-admin/admin/admins/$adminId'
      path: '/$adminId'
      fullPath: '/admin/admins/$adminId'
      preLoaderRoute: typeof AuthedAdminAdminAdminsAdminIdImport
      parentRoute: typeof AuthedAdminAdminAdminsRouteImport
    }
    '/_authed-admin/admin/admins/new': {
      id: '/_authed-admin/admin/admins/new'
      path: '/new'
      fullPath: '/admin/admins/new'
      preLoaderRoute: typeof AuthedAdminAdminAdminsNewImport
      parentRoute: typeof AuthedAdminAdminAdminsRouteImport
    }
    '/_authed-admin/admin/articles/$articleId': {
      id: '/_authed-admin/admin/articles/$articleId'
      path: '/$articleId'
      fullPath: '/admin/articles/$articleId'
      preLoaderRoute: typeof AuthedAdminAdminArticlesArticleIdImport
      parentRoute: typeof AuthedAdminAdminArticlesRouteImport
    }
    '/_authed-admin/admin/articles/new': {
      id: '/_authed-admin/admin/articles/new'
      path: '/new'
      fullPath: '/admin/articles/new'
      preLoaderRoute: typeof AuthedAdminAdminArticlesNewImport
      parentRoute: typeof AuthedAdminAdminArticlesRouteImport
    }
    '/_authed-admin/admin/newsletters/$newsletterId': {
      id: '/_authed-admin/admin/newsletters/$newsletterId'
      path: '/$newsletterId'
      fullPath: '/admin/newsletters/$newsletterId'
      preLoaderRoute: typeof AuthedAdminAdminNewslettersNewsletterIdImport
      parentRoute: typeof AuthedAdminAdminNewslettersRouteImport
    }
    '/_authed-admin/admin/newsletters/new': {
      id: '/_authed-admin/admin/newsletters/new'
      path: '/new'
      fullPath: '/admin/newsletters/new'
      preLoaderRoute: typeof AuthedAdminAdminNewslettersNewImport
      parentRoute: typeof AuthedAdminAdminNewslettersRouteImport
    }
    '/_authed-admin/admin/registration-requests/$registrationRequestId': {
      id: '/_authed-admin/admin/registration-requests/$registrationRequestId'
      path: '/$registrationRequestId'
      fullPath: '/admin/registration-requests/$registrationRequestId'
      preLoaderRoute: typeof AuthedAdminAdminRegistrationRequestsRegistrationRequestIdImport
      parentRoute: typeof AuthedAdminAdminRegistrationRequestsRouteImport
    }
    '/_authed-admin/admin/users/$userId': {
      id: '/_authed-admin/admin/users/$userId'
      path: '/$userId'
      fullPath: '/admin/users/$userId'
      preLoaderRoute: typeof AuthedAdminAdminUsersUserIdImport
      parentRoute: typeof AuthedAdminAdminUsersRouteImport
    }
    '/_public/legal/doc/$legalDocumentName': {
      id: '/_public/legal/doc/$legalDocumentName'
      path: '/legal/doc/$legalDocumentName'
      fullPath: '/legal/doc/$legalDocumentName'
      preLoaderRoute: typeof PublicLegalDocLegalDocumentNameImport
      parentRoute: typeof PublicImport
    }
    '/_authed-admin/admin/admins/': {
      id: '/_authed-admin/admin/admins/'
      path: '/'
      fullPath: '/admin/admins/'
      preLoaderRoute: typeof AuthedAdminAdminAdminsIndexImport
      parentRoute: typeof AuthedAdminAdminAdminsRouteImport
    }
    '/_authed-admin/admin/articles/': {
      id: '/_authed-admin/admin/articles/'
      path: '/'
      fullPath: '/admin/articles/'
      preLoaderRoute: typeof AuthedAdminAdminArticlesIndexImport
      parentRoute: typeof AuthedAdminAdminArticlesRouteImport
    }
    '/_authed-admin/admin/newsletters/': {
      id: '/_authed-admin/admin/newsletters/'
      path: '/'
      fullPath: '/admin/newsletters/'
      preLoaderRoute: typeof AuthedAdminAdminNewslettersIndexImport
      parentRoute: typeof AuthedAdminAdminNewslettersRouteImport
    }
    '/_authed-admin/admin/registration-requests/': {
      id: '/_authed-admin/admin/registration-requests/'
      path: '/'
      fullPath: '/admin/registration-requests/'
      preLoaderRoute: typeof AuthedAdminAdminRegistrationRequestsIndexImport
      parentRoute: typeof AuthedAdminAdminRegistrationRequestsRouteImport
    }
    '/_authed-admin/admin/users/': {
      id: '/_authed-admin/admin/users/'
      path: '/'
      fullPath: '/admin/users/'
      preLoaderRoute: typeof AuthedAdminAdminUsersIndexImport
      parentRoute: typeof AuthedAdminAdminUsersRouteImport
    }
  }
}

// Create and export the route tree

interface AuthedAdminAdminAdminsRouteRouteChildren {
  AuthedAdminAdminAdminsAdminIdRoute: typeof AuthedAdminAdminAdminsAdminIdRoute
  AuthedAdminAdminAdminsNewRoute: typeof AuthedAdminAdminAdminsNewRoute
  AuthedAdminAdminAdminsIndexRoute: typeof AuthedAdminAdminAdminsIndexRoute
}

const AuthedAdminAdminAdminsRouteRouteChildren: AuthedAdminAdminAdminsRouteRouteChildren =
  {
    AuthedAdminAdminAdminsAdminIdRoute: AuthedAdminAdminAdminsAdminIdRoute,
    AuthedAdminAdminAdminsNewRoute: AuthedAdminAdminAdminsNewRoute,
    AuthedAdminAdminAdminsIndexRoute: AuthedAdminAdminAdminsIndexRoute,
  }

const AuthedAdminAdminAdminsRouteRouteWithChildren =
  AuthedAdminAdminAdminsRouteRoute._addFileChildren(
    AuthedAdminAdminAdminsRouteRouteChildren,
  )

interface AuthedAdminAdminArticlesRouteRouteChildren {
  AuthedAdminAdminArticlesArticleIdRoute: typeof AuthedAdminAdminArticlesArticleIdRoute
  AuthedAdminAdminArticlesNewRoute: typeof AuthedAdminAdminArticlesNewRoute
  AuthedAdminAdminArticlesIndexRoute: typeof AuthedAdminAdminArticlesIndexRoute
}

const AuthedAdminAdminArticlesRouteRouteChildren: AuthedAdminAdminArticlesRouteRouteChildren =
  {
    AuthedAdminAdminArticlesArticleIdRoute:
      AuthedAdminAdminArticlesArticleIdRoute,
    AuthedAdminAdminArticlesNewRoute: AuthedAdminAdminArticlesNewRoute,
    AuthedAdminAdminArticlesIndexRoute: AuthedAdminAdminArticlesIndexRoute,
  }

const AuthedAdminAdminArticlesRouteRouteWithChildren =
  AuthedAdminAdminArticlesRouteRoute._addFileChildren(
    AuthedAdminAdminArticlesRouteRouteChildren,
  )

interface AuthedAdminAdminNewslettersRouteRouteChildren {
  AuthedAdminAdminNewslettersNewsletterIdRoute: typeof AuthedAdminAdminNewslettersNewsletterIdRoute
  AuthedAdminAdminNewslettersNewRoute: typeof AuthedAdminAdminNewslettersNewRoute
  AuthedAdminAdminNewslettersIndexRoute: typeof AuthedAdminAdminNewslettersIndexRoute
}

const AuthedAdminAdminNewslettersRouteRouteChildren: AuthedAdminAdminNewslettersRouteRouteChildren =
  {
    AuthedAdminAdminNewslettersNewsletterIdRoute:
      AuthedAdminAdminNewslettersNewsletterIdRoute,
    AuthedAdminAdminNewslettersNewRoute: AuthedAdminAdminNewslettersNewRoute,
    AuthedAdminAdminNewslettersIndexRoute:
      AuthedAdminAdminNewslettersIndexRoute,
  }

const AuthedAdminAdminNewslettersRouteRouteWithChildren =
  AuthedAdminAdminNewslettersRouteRoute._addFileChildren(
    AuthedAdminAdminNewslettersRouteRouteChildren,
  )

interface AuthedAdminAdminRegistrationRequestsRouteRouteChildren {
  AuthedAdminAdminRegistrationRequestsRegistrationRequestIdRoute: typeof AuthedAdminAdminRegistrationRequestsRegistrationRequestIdRoute
  AuthedAdminAdminRegistrationRequestsIndexRoute: typeof AuthedAdminAdminRegistrationRequestsIndexRoute
}

const AuthedAdminAdminRegistrationRequestsRouteRouteChildren: AuthedAdminAdminRegistrationRequestsRouteRouteChildren =
  {
    AuthedAdminAdminRegistrationRequestsRegistrationRequestIdRoute:
      AuthedAdminAdminRegistrationRequestsRegistrationRequestIdRoute,
    AuthedAdminAdminRegistrationRequestsIndexRoute:
      AuthedAdminAdminRegistrationRequestsIndexRoute,
  }

const AuthedAdminAdminRegistrationRequestsRouteRouteWithChildren =
  AuthedAdminAdminRegistrationRequestsRouteRoute._addFileChildren(
    AuthedAdminAdminRegistrationRequestsRouteRouteChildren,
  )

interface AuthedAdminAdminUsersRouteRouteChildren {
  AuthedAdminAdminUsersUserIdRoute: typeof AuthedAdminAdminUsersUserIdRoute
  AuthedAdminAdminUsersIndexRoute: typeof AuthedAdminAdminUsersIndexRoute
}

const AuthedAdminAdminUsersRouteRouteChildren: AuthedAdminAdminUsersRouteRouteChildren =
  {
    AuthedAdminAdminUsersUserIdRoute: AuthedAdminAdminUsersUserIdRoute,
    AuthedAdminAdminUsersIndexRoute: AuthedAdminAdminUsersIndexRoute,
  }

const AuthedAdminAdminUsersRouteRouteWithChildren =
  AuthedAdminAdminUsersRouteRoute._addFileChildren(
    AuthedAdminAdminUsersRouteRouteChildren,
  )

interface AuthedAdminRouteChildren {
  AuthedAdminAdminAdminsRouteRoute: typeof AuthedAdminAdminAdminsRouteRouteWithChildren
  AuthedAdminAdminArticlesRouteRoute: typeof AuthedAdminAdminArticlesRouteRouteWithChildren
  AuthedAdminAdminNewslettersRouteRoute: typeof AuthedAdminAdminNewslettersRouteRouteWithChildren
  AuthedAdminAdminRegistrationRequestsRouteRoute: typeof AuthedAdminAdminRegistrationRequestsRouteRouteWithChildren
  AuthedAdminAdminUsersRouteRoute: typeof AuthedAdminAdminUsersRouteRouteWithChildren
  AuthedAdminAdminIndexRoute: typeof AuthedAdminAdminIndexRoute
}

const AuthedAdminRouteChildren: AuthedAdminRouteChildren = {
  AuthedAdminAdminAdminsRouteRoute:
    AuthedAdminAdminAdminsRouteRouteWithChildren,
  AuthedAdminAdminArticlesRouteRoute:
    AuthedAdminAdminArticlesRouteRouteWithChildren,
  AuthedAdminAdminNewslettersRouteRoute:
    AuthedAdminAdminNewslettersRouteRouteWithChildren,
  AuthedAdminAdminRegistrationRequestsRouteRoute:
    AuthedAdminAdminRegistrationRequestsRouteRouteWithChildren,
  AuthedAdminAdminUsersRouteRoute: AuthedAdminAdminUsersRouteRouteWithChildren,
  AuthedAdminAdminIndexRoute: AuthedAdminAdminIndexRoute,
}

const AuthedAdminRouteWithChildren = AuthedAdminRoute._addFileChildren(
  AuthedAdminRouteChildren,
)

interface PublicNewsRouteRouteChildren {
  PublicNewsArticleIdRoute: typeof PublicNewsArticleIdRoute
  PublicNewsIndexRoute: typeof PublicNewsIndexRoute
}

const PublicNewsRouteRouteChildren: PublicNewsRouteRouteChildren = {
  PublicNewsArticleIdRoute: PublicNewsArticleIdRoute,
  PublicNewsIndexRoute: PublicNewsIndexRoute,
}

const PublicNewsRouteRouteWithChildren = PublicNewsRouteRoute._addFileChildren(
  PublicNewsRouteRouteChildren,
)

interface PublicRouteChildren {
  PublicNewsRouteRoute: typeof PublicNewsRouteRouteWithChildren
  PublicAboutUsRoute: typeof PublicAboutUsRoute
  PublicContactUsRoute: typeof PublicContactUsRoute
  PublicIndexRoute: typeof PublicIndexRoute
  PublicRegisterHedgeFundRoute: typeof PublicRegisterHedgeFundRoute
  PublicRegisterInvestorRoute: typeof PublicRegisterInvestorRoute
  PublicRegisterNewsMemberRoute: typeof PublicRegisterNewsMemberRoute
  PublicRegisterServiceProviderRoute: typeof PublicRegisterServiceProviderRoute
  PublicLegalDocLegalDocumentNameRoute: typeof PublicLegalDocLegalDocumentNameRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicNewsRouteRoute: PublicNewsRouteRouteWithChildren,
  PublicAboutUsRoute: PublicAboutUsRoute,
  PublicContactUsRoute: PublicContactUsRoute,
  PublicIndexRoute: PublicIndexRoute,
  PublicRegisterHedgeFundRoute: PublicRegisterHedgeFundRoute,
  PublicRegisterInvestorRoute: PublicRegisterInvestorRoute,
  PublicRegisterNewsMemberRoute: PublicRegisterNewsMemberRoute,
  PublicRegisterServiceProviderRoute: PublicRegisterServiceProviderRoute,
  PublicLegalDocLegalDocumentNameRoute: PublicLegalDocLegalDocumentNameRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PublicRouteWithChildren
  '/admin-logout': typeof AdminLogoutRoute
  '/logout': typeof LogoutRoute
  '/news': typeof PublicNewsRouteRouteWithChildren
  '/about-us': typeof PublicAboutUsRoute
  '/contact-us': typeof PublicContactUsRoute
  '/': typeof PublicIndexRoute
  '/admin/admins': typeof AuthedAdminAdminAdminsRouteRouteWithChildren
  '/admin/articles': typeof AuthedAdminAdminArticlesRouteRouteWithChildren
  '/admin/newsletters': typeof AuthedAdminAdminNewslettersRouteRouteWithChildren
  '/admin/registration-requests': typeof AuthedAdminAdminRegistrationRequestsRouteRouteWithChildren
  '/admin/users': typeof AuthedAdminAdminUsersRouteRouteWithChildren
  '/news/$articleId': typeof PublicNewsArticleIdRoute
  '/register/hedge-fund': typeof PublicRegisterHedgeFundRoute
  '/register/investor': typeof PublicRegisterInvestorRoute
  '/register/news-member': typeof PublicRegisterNewsMemberRoute
  '/register/service-provider': typeof PublicRegisterServiceProviderRoute
  '/admin': typeof AuthedAdminAdminIndexRoute
  '/news/': typeof PublicNewsIndexRoute
  '/admin/admins/$adminId': typeof AuthedAdminAdminAdminsAdminIdRoute
  '/admin/admins/new': typeof AuthedAdminAdminAdminsNewRoute
  '/admin/articles/$articleId': typeof AuthedAdminAdminArticlesArticleIdRoute
  '/admin/articles/new': typeof AuthedAdminAdminArticlesNewRoute
  '/admin/newsletters/$newsletterId': typeof AuthedAdminAdminNewslettersNewsletterIdRoute
  '/admin/newsletters/new': typeof AuthedAdminAdminNewslettersNewRoute
  '/admin/registration-requests/$registrationRequestId': typeof AuthedAdminAdminRegistrationRequestsRegistrationRequestIdRoute
  '/admin/users/$userId': typeof AuthedAdminAdminUsersUserIdRoute
  '/legal/doc/$legalDocumentName': typeof PublicLegalDocLegalDocumentNameRoute
  '/admin/admins/': typeof AuthedAdminAdminAdminsIndexRoute
  '/admin/articles/': typeof AuthedAdminAdminArticlesIndexRoute
  '/admin/newsletters/': typeof AuthedAdminAdminNewslettersIndexRoute
  '/admin/registration-requests/': typeof AuthedAdminAdminRegistrationRequestsIndexRoute
  '/admin/users/': typeof AuthedAdminAdminUsersIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthedAdminRouteWithChildren
  '/admin-logout': typeof AdminLogoutRoute
  '/logout': typeof LogoutRoute
  '/about-us': typeof PublicAboutUsRoute
  '/contact-us': typeof PublicContactUsRoute
  '/': typeof PublicIndexRoute
  '/news/$articleId': typeof PublicNewsArticleIdRoute
  '/register/hedge-fund': typeof PublicRegisterHedgeFundRoute
  '/register/investor': typeof PublicRegisterInvestorRoute
  '/register/news-member': typeof PublicRegisterNewsMemberRoute
  '/register/service-provider': typeof PublicRegisterServiceProviderRoute
  '/admin': typeof AuthedAdminAdminIndexRoute
  '/news': typeof PublicNewsIndexRoute
  '/admin/admins/$adminId': typeof AuthedAdminAdminAdminsAdminIdRoute
  '/admin/admins/new': typeof AuthedAdminAdminAdminsNewRoute
  '/admin/articles/$articleId': typeof AuthedAdminAdminArticlesArticleIdRoute
  '/admin/articles/new': typeof AuthedAdminAdminArticlesNewRoute
  '/admin/newsletters/$newsletterId': typeof AuthedAdminAdminNewslettersNewsletterIdRoute
  '/admin/newsletters/new': typeof AuthedAdminAdminNewslettersNewRoute
  '/admin/registration-requests/$registrationRequestId': typeof AuthedAdminAdminRegistrationRequestsRegistrationRequestIdRoute
  '/admin/users/$userId': typeof AuthedAdminAdminUsersUserIdRoute
  '/legal/doc/$legalDocumentName': typeof PublicLegalDocLegalDocumentNameRoute
  '/admin/admins': typeof AuthedAdminAdminAdminsIndexRoute
  '/admin/articles': typeof AuthedAdminAdminArticlesIndexRoute
  '/admin/newsletters': typeof AuthedAdminAdminNewslettersIndexRoute
  '/admin/registration-requests': typeof AuthedAdminAdminRegistrationRequestsIndexRoute
  '/admin/users': typeof AuthedAdminAdminUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authed-admin': typeof AuthedAdminRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/admin-logout': typeof AdminLogoutRoute
  '/logout': typeof LogoutRoute
  '/_public/news': typeof PublicNewsRouteRouteWithChildren
  '/_public/about-us': typeof PublicAboutUsRoute
  '/_public/contact-us': typeof PublicContactUsRoute
  '/_public/': typeof PublicIndexRoute
  '/_authed-admin/admin/admins': typeof AuthedAdminAdminAdminsRouteRouteWithChildren
  '/_authed-admin/admin/articles': typeof AuthedAdminAdminArticlesRouteRouteWithChildren
  '/_authed-admin/admin/newsletters': typeof AuthedAdminAdminNewslettersRouteRouteWithChildren
  '/_authed-admin/admin/registration-requests': typeof AuthedAdminAdminRegistrationRequestsRouteRouteWithChildren
  '/_authed-admin/admin/users': typeof AuthedAdminAdminUsersRouteRouteWithChildren
  '/_public/news/$articleId': typeof PublicNewsArticleIdRoute
  '/_public/register/hedge-fund': typeof PublicRegisterHedgeFundRoute
  '/_public/register/investor': typeof PublicRegisterInvestorRoute
  '/_public/register/news-member': typeof PublicRegisterNewsMemberRoute
  '/_public/register/service-provider': typeof PublicRegisterServiceProviderRoute
  '/_authed-admin/admin/': typeof AuthedAdminAdminIndexRoute
  '/_public/news/': typeof PublicNewsIndexRoute
  '/_authed-admin/admin/admins/$adminId': typeof AuthedAdminAdminAdminsAdminIdRoute
  '/_authed-admin/admin/admins/new': typeof AuthedAdminAdminAdminsNewRoute
  '/_authed-admin/admin/articles/$articleId': typeof AuthedAdminAdminArticlesArticleIdRoute
  '/_authed-admin/admin/articles/new': typeof AuthedAdminAdminArticlesNewRoute
  '/_authed-admin/admin/newsletters/$newsletterId': typeof AuthedAdminAdminNewslettersNewsletterIdRoute
  '/_authed-admin/admin/newsletters/new': typeof AuthedAdminAdminNewslettersNewRoute
  '/_authed-admin/admin/registration-requests/$registrationRequestId': typeof AuthedAdminAdminRegistrationRequestsRegistrationRequestIdRoute
  '/_authed-admin/admin/users/$userId': typeof AuthedAdminAdminUsersUserIdRoute
  '/_public/legal/doc/$legalDocumentName': typeof PublicLegalDocLegalDocumentNameRoute
  '/_authed-admin/admin/admins/': typeof AuthedAdminAdminAdminsIndexRoute
  '/_authed-admin/admin/articles/': typeof AuthedAdminAdminArticlesIndexRoute
  '/_authed-admin/admin/newsletters/': typeof AuthedAdminAdminNewslettersIndexRoute
  '/_authed-admin/admin/registration-requests/': typeof AuthedAdminAdminRegistrationRequestsIndexRoute
  '/_authed-admin/admin/users/': typeof AuthedAdminAdminUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/admin-logout'
    | '/logout'
    | '/news'
    | '/about-us'
    | '/contact-us'
    | '/'
    | '/admin/admins'
    | '/admin/articles'
    | '/admin/newsletters'
    | '/admin/registration-requests'
    | '/admin/users'
    | '/news/$articleId'
    | '/register/hedge-fund'
    | '/register/investor'
    | '/register/news-member'
    | '/register/service-provider'
    | '/admin'
    | '/news/'
    | '/admin/admins/$adminId'
    | '/admin/admins/new'
    | '/admin/articles/$articleId'
    | '/admin/articles/new'
    | '/admin/newsletters/$newsletterId'
    | '/admin/newsletters/new'
    | '/admin/registration-requests/$registrationRequestId'
    | '/admin/users/$userId'
    | '/legal/doc/$legalDocumentName'
    | '/admin/admins/'
    | '/admin/articles/'
    | '/admin/newsletters/'
    | '/admin/registration-requests/'
    | '/admin/users/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/admin-logout'
    | '/logout'
    | '/about-us'
    | '/contact-us'
    | '/'
    | '/news/$articleId'
    | '/register/hedge-fund'
    | '/register/investor'
    | '/register/news-member'
    | '/register/service-provider'
    | '/admin'
    | '/news'
    | '/admin/admins/$adminId'
    | '/admin/admins/new'
    | '/admin/articles/$articleId'
    | '/admin/articles/new'
    | '/admin/newsletters/$newsletterId'
    | '/admin/newsletters/new'
    | '/admin/registration-requests/$registrationRequestId'
    | '/admin/users/$userId'
    | '/legal/doc/$legalDocumentName'
    | '/admin/admins'
    | '/admin/articles'
    | '/admin/newsletters'
    | '/admin/registration-requests'
    | '/admin/users'
  id:
    | '__root__'
    | '/_authed-admin'
    | '/_public'
    | '/admin-logout'
    | '/logout'
    | '/_public/news'
    | '/_public/about-us'
    | '/_public/contact-us'
    | '/_public/'
    | '/_authed-admin/admin/admins'
    | '/_authed-admin/admin/articles'
    | '/_authed-admin/admin/newsletters'
    | '/_authed-admin/admin/registration-requests'
    | '/_authed-admin/admin/users'
    | '/_public/news/$articleId'
    | '/_public/register/hedge-fund'
    | '/_public/register/investor'
    | '/_public/register/news-member'
    | '/_public/register/service-provider'
    | '/_authed-admin/admin/'
    | '/_public/news/'
    | '/_authed-admin/admin/admins/$adminId'
    | '/_authed-admin/admin/admins/new'
    | '/_authed-admin/admin/articles/$articleId'
    | '/_authed-admin/admin/articles/new'
    | '/_authed-admin/admin/newsletters/$newsletterId'
    | '/_authed-admin/admin/newsletters/new'
    | '/_authed-admin/admin/registration-requests/$registrationRequestId'
    | '/_authed-admin/admin/users/$userId'
    | '/_public/legal/doc/$legalDocumentName'
    | '/_authed-admin/admin/admins/'
    | '/_authed-admin/admin/articles/'
    | '/_authed-admin/admin/newsletters/'
    | '/_authed-admin/admin/registration-requests/'
    | '/_authed-admin/admin/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthedAdminRoute: typeof AuthedAdminRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
  AdminLogoutRoute: typeof AdminLogoutRoute
  LogoutRoute: typeof LogoutRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthedAdminRoute: AuthedAdminRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
  AdminLogoutRoute: AdminLogoutRoute,
  LogoutRoute: LogoutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authed-admin",
        "/_public",
        "/admin-logout",
        "/logout"
      ]
    },
    "/_authed-admin": {
      "filePath": "_authed-admin.tsx",
      "children": [
        "/_authed-admin/admin/admins",
        "/_authed-admin/admin/articles",
        "/_authed-admin/admin/newsletters",
        "/_authed-admin/admin/registration-requests",
        "/_authed-admin/admin/users",
        "/_authed-admin/admin/"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/news",
        "/_public/about-us",
        "/_public/contact-us",
        "/_public/",
        "/_public/register/hedge-fund",
        "/_public/register/investor",
        "/_public/register/news-member",
        "/_public/register/service-provider",
        "/_public/legal/doc/$legalDocumentName"
      ]
    },
    "/admin-logout": {
      "filePath": "admin-logout.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/_public/news": {
      "filePath": "_public/news/route.tsx",
      "parent": "/_public",
      "children": [
        "/_public/news/$articleId",
        "/_public/news/"
      ]
    },
    "/_public/about-us": {
      "filePath": "_public/about-us.tsx",
      "parent": "/_public"
    },
    "/_public/contact-us": {
      "filePath": "_public/contact-us.tsx",
      "parent": "/_public"
    },
    "/_public/": {
      "filePath": "_public/index.tsx",
      "parent": "/_public"
    },
    "/_authed-admin/admin/admins": {
      "filePath": "_authed-admin/admin/admins/route.tsx",
      "parent": "/_authed-admin",
      "children": [
        "/_authed-admin/admin/admins/$adminId",
        "/_authed-admin/admin/admins/new",
        "/_authed-admin/admin/admins/"
      ]
    },
    "/_authed-admin/admin/articles": {
      "filePath": "_authed-admin/admin/articles/route.tsx",
      "parent": "/_authed-admin",
      "children": [
        "/_authed-admin/admin/articles/$articleId",
        "/_authed-admin/admin/articles/new",
        "/_authed-admin/admin/articles/"
      ]
    },
    "/_authed-admin/admin/newsletters": {
      "filePath": "_authed-admin/admin/newsletters/route.tsx",
      "parent": "/_authed-admin",
      "children": [
        "/_authed-admin/admin/newsletters/$newsletterId",
        "/_authed-admin/admin/newsletters/new",
        "/_authed-admin/admin/newsletters/"
      ]
    },
    "/_authed-admin/admin/registration-requests": {
      "filePath": "_authed-admin/admin/registration-requests/route.tsx",
      "parent": "/_authed-admin",
      "children": [
        "/_authed-admin/admin/registration-requests/$registrationRequestId",
        "/_authed-admin/admin/registration-requests/"
      ]
    },
    "/_authed-admin/admin/users": {
      "filePath": "_authed-admin/admin/users/route.tsx",
      "parent": "/_authed-admin",
      "children": [
        "/_authed-admin/admin/users/$userId",
        "/_authed-admin/admin/users/"
      ]
    },
    "/_public/news/$articleId": {
      "filePath": "_public/news/$articleId.tsx",
      "parent": "/_public/news"
    },
    "/_public/register/hedge-fund": {
      "filePath": "_public/register/hedge-fund.tsx",
      "parent": "/_public"
    },
    "/_public/register/investor": {
      "filePath": "_public/register/investor.tsx",
      "parent": "/_public"
    },
    "/_public/register/news-member": {
      "filePath": "_public/register/news-member.tsx",
      "parent": "/_public"
    },
    "/_public/register/service-provider": {
      "filePath": "_public/register/service-provider.tsx",
      "parent": "/_public"
    },
    "/_authed-admin/admin/": {
      "filePath": "_authed-admin/admin/index.tsx",
      "parent": "/_authed-admin"
    },
    "/_public/news/": {
      "filePath": "_public/news/index.tsx",
      "parent": "/_public/news"
    },
    "/_authed-admin/admin/admins/$adminId": {
      "filePath": "_authed-admin/admin/admins/$adminId.tsx",
      "parent": "/_authed-admin/admin/admins"
    },
    "/_authed-admin/admin/admins/new": {
      "filePath": "_authed-admin/admin/admins/new.tsx",
      "parent": "/_authed-admin/admin/admins"
    },
    "/_authed-admin/admin/articles/$articleId": {
      "filePath": "_authed-admin/admin/articles/$articleId.tsx",
      "parent": "/_authed-admin/admin/articles"
    },
    "/_authed-admin/admin/articles/new": {
      "filePath": "_authed-admin/admin/articles/new.tsx",
      "parent": "/_authed-admin/admin/articles"
    },
    "/_authed-admin/admin/newsletters/$newsletterId": {
      "filePath": "_authed-admin/admin/newsletters/$newsletterId.tsx",
      "parent": "/_authed-admin/admin/newsletters"
    },
    "/_authed-admin/admin/newsletters/new": {
      "filePath": "_authed-admin/admin/newsletters/new.tsx",
      "parent": "/_authed-admin/admin/newsletters"
    },
    "/_authed-admin/admin/registration-requests/$registrationRequestId": {
      "filePath": "_authed-admin/admin/registration-requests/$registrationRequestId.tsx",
      "parent": "/_authed-admin/admin/registration-requests"
    },
    "/_authed-admin/admin/users/$userId": {
      "filePath": "_authed-admin/admin/users/$userId.tsx",
      "parent": "/_authed-admin/admin/users"
    },
    "/_public/legal/doc/$legalDocumentName": {
      "filePath": "_public/legal/doc.$legalDocumentName.tsx",
      "parent": "/_public"
    },
    "/_authed-admin/admin/admins/": {
      "filePath": "_authed-admin/admin/admins/index.tsx",
      "parent": "/_authed-admin/admin/admins"
    },
    "/_authed-admin/admin/articles/": {
      "filePath": "_authed-admin/admin/articles/index.tsx",
      "parent": "/_authed-admin/admin/articles"
    },
    "/_authed-admin/admin/newsletters/": {
      "filePath": "_authed-admin/admin/newsletters/index.tsx",
      "parent": "/_authed-admin/admin/newsletters"
    },
    "/_authed-admin/admin/registration-requests/": {
      "filePath": "_authed-admin/admin/registration-requests/index.tsx",
      "parent": "/_authed-admin/admin/registration-requests"
    },
    "/_authed-admin/admin/users/": {
      "filePath": "_authed-admin/admin/users/index.tsx",
      "parent": "/_authed-admin/admin/users"
    }
  }
}
ROUTE_MANIFEST_END */
