/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as AuthedAdminImport } from './routes/_authed-admin'
import { Route as IndexImport } from './routes/index'
import { Route as AuthedAdminAdminIndexImport } from './routes/_authed-admin/admin/index'
import { Route as AuthedAdminAdminArticlesRouteImport } from './routes/_authed-admin/admin/articles/route'
import { Route as AuthedAdminAdminArticlesIndexImport } from './routes/_authed-admin/admin/articles/index'
import { Route as AuthedAdminAdminArticlesNewImport } from './routes/_authed-admin/admin/articles/new'
import { Route as AuthedAdminAdminArticlesArticleIdImport } from './routes/_authed-admin/admin/articles/$articleId'

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const AuthedAdminRoute = AuthedAdminImport.update({
  id: '/_authed-admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthedAdminAdminIndexRoute = AuthedAdminAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AuthedAdminRoute,
} as any)

const AuthedAdminAdminArticlesRouteRoute =
  AuthedAdminAdminArticlesRouteImport.update({
    id: '/admin/articles',
    path: '/admin/articles',
    getParentRoute: () => AuthedAdminRoute,
  } as any)

const AuthedAdminAdminArticlesIndexRoute =
  AuthedAdminAdminArticlesIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthedAdminAdminArticlesRouteRoute,
  } as any)

const AuthedAdminAdminArticlesNewRoute =
  AuthedAdminAdminArticlesNewImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => AuthedAdminAdminArticlesRouteRoute,
  } as any)

const AuthedAdminAdminArticlesArticleIdRoute =
  AuthedAdminAdminArticlesArticleIdImport.update({
    id: '/$articleId',
    path: '/$articleId',
    getParentRoute: () => AuthedAdminAdminArticlesRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed-admin': {
      id: '/_authed-admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedAdminImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/_authed-admin/admin/articles': {
      id: '/_authed-admin/admin/articles'
      path: '/admin/articles'
      fullPath: '/admin/articles'
      preLoaderRoute: typeof AuthedAdminAdminArticlesRouteImport
      parentRoute: typeof AuthedAdminImport
    }
    '/_authed-admin/admin/': {
      id: '/_authed-admin/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthedAdminAdminIndexImport
      parentRoute: typeof AuthedAdminImport
    }
    '/_authed-admin/admin/articles/$articleId': {
      id: '/_authed-admin/admin/articles/$articleId'
      path: '/$articleId'
      fullPath: '/admin/articles/$articleId'
      preLoaderRoute: typeof AuthedAdminAdminArticlesArticleIdImport
      parentRoute: typeof AuthedAdminAdminArticlesRouteImport
    }
    '/_authed-admin/admin/articles/new': {
      id: '/_authed-admin/admin/articles/new'
      path: '/new'
      fullPath: '/admin/articles/new'
      preLoaderRoute: typeof AuthedAdminAdminArticlesNewImport
      parentRoute: typeof AuthedAdminAdminArticlesRouteImport
    }
    '/_authed-admin/admin/articles/': {
      id: '/_authed-admin/admin/articles/'
      path: '/'
      fullPath: '/admin/articles/'
      preLoaderRoute: typeof AuthedAdminAdminArticlesIndexImport
      parentRoute: typeof AuthedAdminAdminArticlesRouteImport
    }
  }
}

// Create and export the route tree

interface AuthedAdminAdminArticlesRouteRouteChildren {
  AuthedAdminAdminArticlesArticleIdRoute: typeof AuthedAdminAdminArticlesArticleIdRoute
  AuthedAdminAdminArticlesNewRoute: typeof AuthedAdminAdminArticlesNewRoute
  AuthedAdminAdminArticlesIndexRoute: typeof AuthedAdminAdminArticlesIndexRoute
}

const AuthedAdminAdminArticlesRouteRouteChildren: AuthedAdminAdminArticlesRouteRouteChildren =
  {
    AuthedAdminAdminArticlesArticleIdRoute:
      AuthedAdminAdminArticlesArticleIdRoute,
    AuthedAdminAdminArticlesNewRoute: AuthedAdminAdminArticlesNewRoute,
    AuthedAdminAdminArticlesIndexRoute: AuthedAdminAdminArticlesIndexRoute,
  }

const AuthedAdminAdminArticlesRouteRouteWithChildren =
  AuthedAdminAdminArticlesRouteRoute._addFileChildren(
    AuthedAdminAdminArticlesRouteRouteChildren,
  )

interface AuthedAdminRouteChildren {
  AuthedAdminAdminArticlesRouteRoute: typeof AuthedAdminAdminArticlesRouteRouteWithChildren
  AuthedAdminAdminIndexRoute: typeof AuthedAdminAdminIndexRoute
}

const AuthedAdminRouteChildren: AuthedAdminRouteChildren = {
  AuthedAdminAdminArticlesRouteRoute:
    AuthedAdminAdminArticlesRouteRouteWithChildren,
  AuthedAdminAdminIndexRoute: AuthedAdminAdminIndexRoute,
}

const AuthedAdminRouteWithChildren = AuthedAdminRoute._addFileChildren(
  AuthedAdminRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedAdminRouteWithChildren
  '/logout': typeof LogoutRoute
  '/admin/articles': typeof AuthedAdminAdminArticlesRouteRouteWithChildren
  '/admin': typeof AuthedAdminAdminIndexRoute
  '/admin/articles/$articleId': typeof AuthedAdminAdminArticlesArticleIdRoute
  '/admin/articles/new': typeof AuthedAdminAdminArticlesNewRoute
  '/admin/articles/': typeof AuthedAdminAdminArticlesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedAdminRouteWithChildren
  '/logout': typeof LogoutRoute
  '/admin': typeof AuthedAdminAdminIndexRoute
  '/admin/articles/$articleId': typeof AuthedAdminAdminArticlesArticleIdRoute
  '/admin/articles/new': typeof AuthedAdminAdminArticlesNewRoute
  '/admin/articles': typeof AuthedAdminAdminArticlesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed-admin': typeof AuthedAdminRouteWithChildren
  '/logout': typeof LogoutRoute
  '/_authed-admin/admin/articles': typeof AuthedAdminAdminArticlesRouteRouteWithChildren
  '/_authed-admin/admin/': typeof AuthedAdminAdminIndexRoute
  '/_authed-admin/admin/articles/$articleId': typeof AuthedAdminAdminArticlesArticleIdRoute
  '/_authed-admin/admin/articles/new': typeof AuthedAdminAdminArticlesNewRoute
  '/_authed-admin/admin/articles/': typeof AuthedAdminAdminArticlesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/logout'
    | '/admin/articles'
    | '/admin'
    | '/admin/articles/$articleId'
    | '/admin/articles/new'
    | '/admin/articles/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/logout'
    | '/admin'
    | '/admin/articles/$articleId'
    | '/admin/articles/new'
    | '/admin/articles'
  id:
    | '__root__'
    | '/'
    | '/_authed-admin'
    | '/logout'
    | '/_authed-admin/admin/articles'
    | '/_authed-admin/admin/'
    | '/_authed-admin/admin/articles/$articleId'
    | '/_authed-admin/admin/articles/new'
    | '/_authed-admin/admin/articles/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedAdminRoute: typeof AuthedAdminRouteWithChildren
  LogoutRoute: typeof LogoutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedAdminRoute: AuthedAdminRouteWithChildren,
  LogoutRoute: LogoutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed-admin",
        "/logout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed-admin": {
      "filePath": "_authed-admin.tsx",
      "children": [
        "/_authed-admin/admin/articles",
        "/_authed-admin/admin/"
      ]
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/_authed-admin/admin/articles": {
      "filePath": "_authed-admin/admin/articles/route.tsx",
      "parent": "/_authed-admin",
      "children": [
        "/_authed-admin/admin/articles/$articleId",
        "/_authed-admin/admin/articles/new",
        "/_authed-admin/admin/articles/"
      ]
    },
    "/_authed-admin/admin/": {
      "filePath": "_authed-admin/admin/index.tsx",
      "parent": "/_authed-admin"
    },
    "/_authed-admin/admin/articles/$articleId": {
      "filePath": "_authed-admin/admin/articles/$articleId.tsx",
      "parent": "/_authed-admin/admin/articles"
    },
    "/_authed-admin/admin/articles/new": {
      "filePath": "_authed-admin/admin/articles/new.tsx",
      "parent": "/_authed-admin/admin/articles"
    },
    "/_authed-admin/admin/articles/": {
      "filePath": "_authed-admin/admin/articles/index.tsx",
      "parent": "/_authed-admin/admin/articles"
    }
  }
}
ROUTE_MANIFEST_END */
